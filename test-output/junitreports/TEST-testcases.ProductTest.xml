<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="LAPTOP-JUA187N9" failures="5" tests="53" name="testcases.ProductTest" time="45.391" errors="1" timestamp="2025-02-03T12:18:05 IST" skipped="46">
  <testcase classname="testcases.ProductTest" name="setUp" time="6.817">
    <error message="Error {
  message=&#039;Target page, context or browser has been closed
  name=&#039;TargetClosedError
  stack=&#039;TargetClosedError:Target page, context or browser has been closed
Error
    at captureRawStack (C:\Users\VICKYS~1\AppData\Local\Temp\playwright-java-1051018452816850103\package\lib\utils\stackTrace.js:50:17)
    at LongStandingScope._race (C:\Users\VICKYS~1\AppData\Local\Temp\playwright-java-1051018452816850103\package\lib\utils\manualPromise.js:91:52)
    at LongStandingScope.race (C:\Users\VICKYS~1\AppData\Local\Temp\playwright-java-1051018452816850103\package\lib\utils\manualPromise.js:84:17)
    at FrameDispatcher._handleCommand (C:\Users\VICKYS~1\AppData\Local\Temp\playwright-java-1051018452816850103\package\lib\server\dispatchers\dispatcher.js:96:36)
    at DispatcherConnection.dispatch (C:\Users\VICKYS~1\AppData\Local\Temp\playwright-java-1051018452816850103\package\lib\server\dispatchers\dispatcher.js:361:39)
}
Call log:
-   - navigating to &quot;http://localhost:3000/&quot;, waiting until &quot;load&quot;
" type="com.microsoft.playwright.impl.TargetClosedError">
      <![CDATA[com.microsoft.playwright.impl.TargetClosedError: Error {
  message='Target page, context or browser has been closed
  name='TargetClosedError
  stack='TargetClosedError:Target page, context or browser has been closed
Error
    at captureRawStack (C:\Users\VICKYS~1\AppData\Local\Temp\playwright-java-1051018452816850103\package\lib\utils\stackTrace.js:50:17)
    at LongStandingScope._race (C:\Users\VICKYS~1\AppData\Local\Temp\playwright-java-1051018452816850103\package\lib\utils\manualPromise.js:91:52)
    at LongStandingScope.race (C:\Users\VICKYS~1\AppData\Local\Temp\playwright-java-1051018452816850103\package\lib\utils\manualPromise.js:84:17)
    at FrameDispatcher._handleCommand (C:\Users\VICKYS~1\AppData\Local\Temp\playwright-java-1051018452816850103\package\lib\server\dispatchers\dispatcher.js:96:36)
    at DispatcherConnection.dispatch (C:\Users\VICKYS~1\AppData\Local\Temp\playwright-java-1051018452816850103\package\lib\server\dispatchers\dispatcher.js:361:39)
}
Call log:
-   - navigating to "http://localhost:3000/", waiting until "load"

at com.microsoft.playwright.impl.WaitableResult.get(WaitableResult.java:54)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:132)
at com.microsoft.playwright.impl.Connection.sendMessage(Connection.java:130)
at com.microsoft.playwright.impl.ChannelOwner.sendMessage(ChannelOwner.java:118)
at com.microsoft.playwright.impl.FrameImpl.navigateImpl(FrameImpl.java:463)
at com.microsoft.playwright.impl.PageImpl.lambda$navigate$47(PageImpl.java:943)
at com.microsoft.playwright.impl.LoggingSupport.withLogging(LoggingSupport.java:47)
at com.microsoft.playwright.impl.ChannelOwner.withLogging(ChannelOwner.java:97)
at com.microsoft.playwright.impl.PageImpl.navigate(PageImpl.java:943)
at com.microsoft.playwright.impl.PageImpl.navigate(PageImpl.java:42)
at com.microsoft.playwright.Page.navigate(Page.java:5474)
at testbase.BaseClass.setUp(BaseClass.java:25)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: com.microsoft.playwright.impl.TargetClosedError: Error {
  message='Target page, context or browser has been closed
  name='TargetClosedError
  stack='TargetClosedError:Target page, context or browser has been closed
Error
    at captureRawStack (C:\Users\VICKYS~1\AppData\Local\Temp\playwright-java-1051018452816850103\package\lib\utils\stackTrace.js:50:17)
    at LongStandingScope._race (C:\Users\VICKYS~1\AppData\Local\Temp\playwright-java-1051018452816850103\package\lib\utils\manualPromise.js:91:52)
    at LongStandingScope.race (C:\Users\VICKYS~1\AppData\Local\Temp\playwright-java-1051018452816850103\package\lib\utils\manualPromise.js:84:17)
    at FrameDispatcher._handleCommand (C:\Users\VICKYS~1\AppData\Local\Temp\playwright-java-1051018452816850103\package\lib\server\dispatchers\dispatcher.js:96:36)
    at DispatcherConnection.dispatch (C:\Users\VICKYS~1\AppData\Local\Temp\playwright-java-1051018452816850103\package\lib\server\dispatchers\dispatcher.js:361:39)
}
Call log:
-   - navigating to "http://localhost:3000/", waiting until "load"

at com.microsoft.playwright.impl.Connection.dispatch(Connection.java:256)
at com.microsoft.playwright.impl.Connection.processOneMessage(Connection.java:211)
at com.microsoft.playwright.impl.ChannelOwner.runUntil(ChannelOwner.java:130)
... 40 more
]]>
    </error>
  </testcase> <!-- setUp -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testValidProductEntry" time="19.651">
    <failure message="Success message not displayed expected [true] but found [false]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: Success message not displayed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at testcases.ProductTest.testValidProductEntry(ProductTest.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- testValidProductEntry -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testEmptyProductName" time="4.739"/>
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testInvalidBarcode" time="4.578">
    <failure message="Error message not displayed for invalid barcode expected [true] but found [false]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: Error message not displayed for invalid barcode expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at testcases.ProductTest.testInvalidBarcode(ProductTest.java:73)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- testInvalidBarcode -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testSalePriceGreaterThanProductPrice" time="4.573">
    <failure message="Validation message not displayed for sale price exceeding product price expected [true] but found [false]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: Validation message not displayed for sale price exceeding product price expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at testcases.ProductTest.testSalePriceGreaterThanProductPrice(ProductTest.java:85)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- testSalePriceGreaterThanProductPrice -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testNegativeQuantity" time="4.697">
    <failure message="Error message not displayed for negative quantity expected [true] but found [false]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: Error message not displayed for negative quantity expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at testcases.ProductTest.testNegativeQuantity(ProductTest.java:96)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- testNegativeQuantity -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testInvalidGSTPercent" time="0.336">
    <failure message="Error message not displayed for invalid GST percent expected [true] but found [false]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: Error message not displayed for invalid GST percent expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at testcases.ProductTest.testInvalidGSTPercent(ProductTest.java:107)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- testInvalidGSTPercent -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testInvalidProductTags" time="0.000">
    <skipped/>
  </testcase> <!-- testInvalidProductTags -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testManufactureYearFormat" time="0.000">
    <skipped/>
  </testcase> <!-- testManufactureYearFormat -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testWeightFieldValidation" time="0.000">
    <skipped/>
  </testcase> <!-- testWeightFieldValidation -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testFieldsClearedAfterSubmission" time="0.000">
    <skipped/>
  </testcase> <!-- testFieldsClearedAfterSubmission -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testSuccessMessageAfterSubmission" time="0.000">
    <skipped/>
  </testcase> <!-- testSuccessMessageAfterSubmission -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testProductListLoadsCorrectly" time="0.000">
    <skipped/>
  </testcase> <!-- testProductListLoadsCorrectly -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testProductSearch" time="0.000">
    <skipped/>
  </testcase> <!-- testProductSearch -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testDeleteProduct" time="0.000">
    <skipped/>
  </testcase> <!-- testDeleteProduct -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testLongProductDescription" time="0.000">
    <skipped/>
  </testcase> <!-- testLongProductDescription -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testNumericManufacturerName" time="0.000">
    <skipped/>
  </testcase> <!-- testNumericManufacturerName -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testProductTagsWithSpaces" time="0.000">
    <skipped/>
  </testcase> <!-- testProductTagsWithSpaces -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testEmptyDimensionFields" time="0.000">
    <skipped/>
  </testcase> <!-- testEmptyDimensionFields -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testLongNutritionInformation" time="0.000">
    <skipped/>
  </testcase> <!-- testLongNutritionInformation -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testReturnableFieldDefault" time="0.000">
    <skipped/>
  </testcase> <!-- testReturnableFieldDefault -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testGSTPercentWithDecimals" time="0.000">
    <skipped/>
  </testcase> <!-- testGSTPercentWithDecimals -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testNonIntegerShipmentBufferWindow" time="0.000">
    <skipped/>
  </testcase> <!-- testNonIntegerShipmentBufferWindow -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testProductListPagination" time="0.000">
    <skipped/>
  </testcase> <!-- testProductListPagination -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testSortByProductName" time="0.000">
    <skipped/>
  </testcase> <!-- testSortByProductName -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testInPlaceEditingOfProductPrice" time="0.000">
    <skipped/>
  </testcase> <!-- testInPlaceEditingOfProductPrice -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testValidProductNameEntry" time="0.000">
    <skipped/>
  </testcase> <!-- testValidProductNameEntry -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testInvalidProductNameEntry" time="0.000">
    <skipped/>
  </testcase> <!-- testInvalidProductNameEntry -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testValidBarcodeEntry" time="0.000">
    <skipped/>
  </testcase> <!-- testValidBarcodeEntry -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testInvalidBarcodeEntry" time="0.000">
    <skipped/>
  </testcase> <!-- testInvalidBarcodeEntry -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testValidProductDescription" time="0.000">
    <skipped/>
  </testcase> <!-- testValidProductDescription -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testValidProductPrice" time="0.000">
    <skipped/>
  </testcase> <!-- testValidProductPrice -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testInvalidProductPrice" time="0.000">
    <skipped/>
  </testcase> <!-- testInvalidProductPrice -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testSalePriceExceedsProductPrice" time="0.000">
    <skipped/>
  </testcase> <!-- testSalePriceExceedsProductPrice -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testValidGSTPercent" time="0.000">
    <skipped/>
  </testcase> <!-- testValidGSTPercent -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testGSTPercentCannotExceed100" time="0.000">
    <skipped/>
  </testcase> <!-- testGSTPercentCannotExceed100 -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testValidQuantity" time="0.000">
    <skipped/>
  </testcase> <!-- testValidQuantity -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testNegativeQuantity1" time="0.000">
    <skipped/>
  </testcase> <!-- testNegativeQuantity1 -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testUnitOfMeasurementDropdown" time="0.000">
    <skipped/>
  </testcase> <!-- testUnitOfMeasurementDropdown -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testShipmentBufferWindow" time="0.000">
    <skipped/>
  </testcase> <!-- testShipmentBufferWindow -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testProductTags" time="0.000">
    <skipped/>
  </testcase> <!-- testProductTags -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testCancellableField" time="0.000">
    <skipped/>
  </testcase> <!-- testCancellableField -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testReturnableField" time="0.000">
    <skipped/>
  </testcase> <!-- testReturnableField -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testManufacturerName" time="0.000">
    <skipped/>
  </testcase> <!-- testManufacturerName -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testManufactureYear" time="0.000">
    <skipped/>
  </testcase> <!-- testManufactureYear -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testAdditiveInformation" time="0.000">
    <skipped/>
  </testcase> <!-- testAdditiveInformation -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testDimensionDetails" time="0.000">
    <skipped/>
  </testcase> <!-- testDimensionDetails -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testValidWeight" time="0.000">
    <skipped/>
  </testcase> <!-- testValidWeight -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testWeightUnitDropdown" time="0.000">
    <skipped/>
  </testcase> <!-- testWeightUnitDropdown -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testProductNameNotEmpty" time="0.000">
    <skipped/>
  </testcase> <!-- testProductNameNotEmpty -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testPriceWithinRange" time="0.000">
    <skipped/>
  </testcase> <!-- testPriceWithinRange -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testSalePriceNotExceedProductPrice" time="0.000">
    <skipped/>
  </testcase> <!-- testSalePriceNotExceedProductPrice -->
  <system-out/>
  <testcase classname="testcases.ProductTest" name="testUnitOfMeasurementRequired" time="0.000">
    <skipped/>
  </testcase> <!-- testUnitOfMeasurementRequired -->
  <system-out/>
</testsuite> <!-- testcases.ProductTest -->
